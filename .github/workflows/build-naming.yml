name: Build Naming Binary

on:
  workflow_dispatch:

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact-name: naming-linux
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact-name: naming-windows.exe
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact-name: naming-macos

    timeout-minutes: 60

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.75.0
          targets: ${{ matrix.target }}

      - name: Install Windows dependencies
        if: matrix.os == 'windows-latest'
        run: |
          choco install -y visualstudio2019buildtools --package-parameters "--add Microsoft.VisualStudio.Workload.VCTools"
        shell: pwsh

      - name: Cache Cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Build naming binary (Windows)
        if: matrix.os == 'windows-latest'
        run: cargo build --bin naming --release --target ${{ matrix.target }}
        shell: pwsh
        env:
          CARGO_INCREMENTAL: 0
          CARGO_TERM_COLOR: always

      - name: Build naming binary (Linux/macOS)
        if: matrix.os != 'windows-latest'
        run: cargo build --bin naming --release --target ${{ matrix.target }}
        shell: bash
        env:
          CARGO_INCREMENTAL: 0
          CARGO_TERM_COLOR: always

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact-name }}
          path: target/${{ matrix.target }}/release/${{ matrix.artifact-name }}
          if-no-files-found: error
